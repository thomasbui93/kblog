{"version":3,"sources":["..\\..\\..\\server\\routes\\user\\user.controller.js"],"names":[],"mappings":"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","file":"server/routes/user/user.controller.js","sourcesContent":["import auth from 'jsonwebtoken';\r\nimport {jsonTokenKey, confidential} from '../../config';\r\n\r\nimport Device from './device.model';\r\n\r\nconst authenticate = (req, res, next)=>{\r\n    const email = req.body.email;\r\n    const password = req.body.password;\r\n\r\n    if(confidential.email === email && confidential.password === password){\r\n        const header = {\r\n            expireAt: new Date().valueOf() + 7*24*60*60\r\n        };\r\n        const token = auth.sign(header, jsonTokenKey);\r\n\r\n        res.json({\r\n            token: token\r\n        });\r\n    }else {\r\n        res.status(403).json({\r\n            error: 'not authenticated'\r\n        });\r\n    }\r\n};\r\n\r\nconst getUser = (req, res, next)=>{\r\n    Object.assign(user, confidential);\r\n    delete user.password;\r\n    res.json(user);\r\n};\r\nconst check = (req, res, next)=>{\r\n    auth.verify(req.body.token, jsonTokenKey, (error, decode)=>{\r\n        if(error){\r\n            res.status(200)\r\n                .json({\r\n                    msg: 'not authenticated'\r\n                })\r\n        }else {\r\n            const token = decode.token;\r\n            const expDate = new Date(token);\r\n            if(expDate < new Date()){\r\n                res.status(200)\r\n                    .json({\r\n                        msg: 'expired token'\r\n                    })\r\n            }else{\r\n                res.status(200)\r\n                    .json({\r\n                        msg: 'ok'\r\n                    })\r\n            }\r\n        }\r\n    })\r\n}\r\nconst checkAuth = (token)=>{\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        auth.verify(token, jsonTokenKey, (error, decode)=>{\r\n            if(error){\r\n                reject(error);\r\n            }else {\r\n                const token = decode.token;\r\n                const expDate = new Date(token);\r\n                if(expDate < new Date()){\r\n                    reject({\r\n                            msg: 'expired token'\r\n                        });\r\n                }else{\r\n                    resolve({\r\n                        msg: 'ok'\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n\r\n}\r\nconst setUser = (req, res, next)=>{\r\n\r\n}\r\n\r\nexport {authenticate, getUser, setUser, check, checkAuth};\r\n"]}