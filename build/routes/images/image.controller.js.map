{"version":3,"sources":["..\\..\\..\\server\\routes\\images\\image.controller.js"],"names":[],"mappings":"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","file":"server/routes/images/image.controller.js","sourcesContent":["import Upload from 'upload-file';\r\nimport Image from './image.model';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst create = (req, res, next)=> {\r\n    var upload = new Upload({\r\n        dest: 'public/images',\r\n        maxFileSize: 100 * 1024,\r\n        acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\r\n        rename: function(name, file) {\r\n            const extension = file.filename.split('.').pop();\r\n            let fileName = new Buffer(new Date().toTimeString()).toString('base64');\r\n            return fileName+'.'+extension;\r\n        }\r\n    });\r\n\r\n    upload.on('end', function(fields, files) {\r\n        var filePath = '';\r\n\r\n        for (var fileData in files) {\r\n            filePath = '/images/'+files[fileData].filename;\r\n        }\r\n        Image.create({url: filePath}, (error, image)=>{\r\n            if(error) return next(error);\r\n\r\n            res.status(201).json(image);\r\n        })\r\n\r\n    });\r\n\r\n    upload.on('error', function(err) {\r\n        res.send(err);\r\n    });\r\n\r\n    upload.parse(req);\r\n\r\n}\r\n\r\nconst getAll = (req, res, next)=>{\r\n    Image.find({})\r\n        .exec((error, images)=>{\r\n        if(error){\r\n            return next(error);\r\n        }\r\n        if(!images){\r\n            return next(error);\r\n        }\r\n        res.json(images);\r\n    })\r\n}\r\n\r\nconst update = (req, res, next)=>{\r\n    const imageId = req.params.imageId;\r\n    console.log(imageId);\r\n\r\n    Image.findById(imageId)\r\n        .exec((error, image)=>{\r\n            if(error) return next(error);\r\n            if(!image) return next(error);\r\n\r\n            if(req.body.caption !== null && req.body.caption !== undefined){\r\n                image.update(req.body, (err, img)=>{\r\n                    if(err) {\r\n                        res.statusCode = 400;\r\n                        res.send({ error: 'Validation error' });\r\n                    }\r\n                    res.json(img);\r\n                })\r\n            }else {\r\n                return next();\r\n            }\r\n\r\n\r\n        });\r\n}\r\n\r\nconst  remove = (req, res, next)=>{\r\n    const imageId = req.params.imageId;\r\n\r\n    Image.findById(imageId)\r\n        .exec((error, image)=>{\r\n            if(error) return next(error);\r\n            if(!image) return next(error);\r\n            const imageUrl = path.dirname(require.main.filename)+'/public'+ image.url;\r\n\r\n            image.remove((error)=>{\r\n                if(error) return next(error);\r\n                fs.unlink(imageUrl, (err)=>{\r\n                    if(err) return next(err);\r\n                    res.status(204).end();\r\n                })\r\n            })\r\n        });\r\n}\r\nexport { create, getAll, update, remove };"]}