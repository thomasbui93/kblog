{"version":3,"sources":["..\\server\\index.js"],"names":[],"mappings":";;;;IAAO,IAAI,2BAAM,MAAM;;IAChB,OAAO,2BAAM,SAAS;;IACtB,QAAQ,2BAAM,UAAU;;IACxB,UAAU,2BAAM,aAAa;;IAC7B,YAAY,2BAAO,UAAU;;IAC7B,WAAW,2BAAM,aAAa;;AAIrC,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,cAAc,CAAC;AACxD,IAAM,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnD,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEvC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;;;;IAIpF,MAAM,2BAAM,UAAU;;AAC7B,MAAM,CAAC,GAAG,CAAC,CAAC;;;AAGZ,IAAI,YAAY,EAAE;AAChB,MAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,MAAI,iBAAiB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC1D,MAAI,oBAAoB,GAAE,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC5D,MAAI,MAAM,GAAE,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC5C,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACjC,MAAM,UAAU,GAAG,iBAAiB,CAAC,QAAQ,EAAE;AAC7C,cAAU,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU;AACpC,eAAW,EAAE,KAAK;AAClB,SAAK,EAAE;AACL,YAAM,EAAE,IAAI;AACZ,UAAI,EAAE,KAAK;AACX,aAAO,EAAE,IAAI;AACb,YAAM,EAAE,KAAK;AACb,kBAAY,EAAE,KAAK;AACnB,aAAO,EAAE,KAAK;KACf;GACF,CAAC,CAAC;;AAEH,KAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACpB,KAAG,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;;;;AASxC,KAAG,CAAC,GAAG,CAAC,OAAO,UAAO,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;CAG/D,MAAM;AACL,KAAG,CAAC,GAAG,CAAC,OAAO,UAAO,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAC9D,KAAG,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE;AACvC,OAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC,CAAC;GAC5D,CAAC,CAAC;CACJ;AACD,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE;AAChD,MAAI,GAAG,EAAE;AACP,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;GAClB;AACD,SAAO,CAAC,IAAI,CAAC,0EAA0E,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CACtG,CAAC,CAAC","file":"server/index.js","sourcesContent":["import path from 'path';\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport bodyParser from 'body-parser';\r\nimport serverConfig  from './config';\r\nimport compression from 'compression';\r\n\r\n\r\n\r\nconst isDeveloping = process.argv[2] !== '--production';\r\nconst port = isDeveloping ? 3000 : process.argv[3];\r\nlet app = express();\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(compression({ threshold: 0 }));\r\n//mongodb config\r\nmongoose.connect(serverConfig.database.mongodb.uri, serverConfig.database.mongodb.options);\r\n\r\n//config routes\r\n\r\nimport routes from './routes';\r\nroutes(app);\r\n//end config routes\r\n\r\nif (isDeveloping) {\r\n  let webpack = require('webpack');\r\n  let webpackMiddleware = require('webpack-dev-middleware');\r\n  let webpackHotMiddleware= require('webpack-hot-middleware');\r\n  let config =require('../webpack.config.js');\r\n  const compiler = webpack(config);\r\n  const middleware = webpackMiddleware(compiler, {\r\n    publicPath: config.output.publicPath,\r\n    contentBase: 'src',\r\n    stats: {\r\n      colors: true,\r\n      hash: false,\r\n      timings: true,\r\n      chunks: false,\r\n      chunkModules: false,\r\n      modules: false\r\n    }\r\n  });\r\n\r\n  app.use(middleware);\r\n  app.use(webpackHotMiddleware(compiler));\r\n\r\n  //end webpack configuration.\r\n\r\n  /*app.get('*', function response(req, res) {\r\n    res.write(middleware.fileSystem.readFileSync(path.join(__dirname, 'public/index.html')));\r\n    res.end();\r\n  });\r\n  */\r\n  app.use(express.static(path.resolve(__dirname, '../public')));\r\n\r\n\r\n} else {\r\n  app.use(express.static(path.resolve(__dirname, '../public')));\r\n  app.get('*', function response(req, res) {\r\n    res.sendFile(path.join(__dirname, '../public/index.html'));\r\n  });\r\n}\r\napp.listen(port, '0.0.0.0', function onStart(err) {\r\n  if (err) {\r\n    console.log(err);\r\n  }\r\n  console.info('==> ðŸŒŽ Listening on port %s. Open up http://0.0.0.0:%s/ in your browser.', port, port);\r\n});"]}